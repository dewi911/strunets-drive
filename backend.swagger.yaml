openapi: 3.0.0
info:
  title: File Storage API
  description: API for managing file storage and authentication
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error message"

    LoginInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "john.doe"
        password:
          type: string
          format: password
          example: "secretpassword"

    SignUpInput:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
          example: "john.doe"
        password:
          type: string
          format: password
          example: "secretpassword"
        email:
          type: string
          format: email
          example: "john@example.com"

    FileInfo:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "document.pdf"
        size:
          type: integer
          format: int64
          example: 1048576
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        owner:
          type: string
          example: "john.doe"

paths:
  /auth/sign-up:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpInput'
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User successfully registered"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIs..."
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    get:
      tags:
        - Authentication
      summary: Refresh access token
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIs..."
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /files:
    post:
      tags:
        - Files
      summary: Upload a file
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "File uploaded successfully"
                  file:
                    $ref: '#/components/schemas/FileInfo'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Files
      summary: List all files
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileInfo'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /files/{id}:
    get:
      tags:
        - Files
      summary: Download a file
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Files
      summary: Delete a file
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "File deleted successfully"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /files/{id}/copy:
    post:
      tags:
        - Files
      summary: Copy a file
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File copied successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'

  /files/{id}/move:
    put:
      tags:
        - Files
      summary: Move a file
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File moved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'

  /files/{id}/info:
    get:
      tags:
        - Files
      summary: Get file information
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'